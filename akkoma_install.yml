- name: Prepare service user
  gather_facts: false
  hosts: all
  become: true
  become_method: su
  tasks:
    - name: Create service user's group
      ansible.builtin.group:
        name: akkoma

    - name: Create service user
      ansible.builtin.user:
        name: akkoma
        group: akkoma


- name: Collect build dependencies
  gather_facts: false
  hosts: all
  become: true
  become_method: su
  vars_files:
    - vars/akkoma.yml
  vars:
    akkoma_deps:
      - elixir
      - elixir-hex
      - postgresql13-server
      - postgresql13-client
      - postgresql13-contrib
      - ca_root_nss
      - go119
      - ImageMagick7-nox11
      - ffmpeg
  tasks:
    - name: Gather optional dependencies
      loop:
        - "postgresql13-rum"
        - "p5-Image-ExifTool"
      when: >-
        (item == "postgresql13-rum" and rum_indices) or
        (item == "p5-Image-ExifTool" and strip_uploads)
      ansible.builtin.set_fact:
        akkoma_deps: "{{ akkoma_deps + [item] }}"

    - name: Install binary dependencies
      community.general.pkgng:
        name: "{{ akkoma_deps }}"

    - name: Install Caddy
      community.general.portinstall:
        name: www/caddy
        use_packages: false

    - name: Enable ACL support
      ansible.builtin.command:
        cmd: mount -o acls /


- name: Build Akkoma
  gather_facts: false
  hosts: all
  become: true
  become_method: su
  become_user: akkoma
  vars_files:
    - vars/akkoma.yml
  tasks:
    - name: Download Akkoma source
      ansible.builtin.git:
        repo: https://akkoma.dev/AkkomaGang/akkoma.git
        version: stable
        dest: /home/akkoma/akkoma
        single_branch: true
        update: false

    - name: Check out latest release
      ansible.builtin.shell:
        cmd: git checkout $(git tag -l | grep -v 'rc[0-9]*$' | sort -V | tail -n 1)
        chdir: /home/akkoma/akkoma

    - name: Install rebar3
      ansible.builtin.command:
        cmd: mix local.rebar --force
        chdir: /home/akkoma/akkoma
        creates: /home/akkoma/.mix/rebar3

    - name: Install Akkoma Erlang dependencies
      ansible.builtin.command:
        cmd: mix deps.get
        chdir: /home/akkoma/akkoma

    - name: Generate database user password
      ansible.builtin.set_fact:
        db_pass: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits length=22') }}"

    - name: Compile Akkoma source
      environment:
        MIX_ENV: "{{ mix_env }}"
      ansible.builtin.command:
        cmd: >
          mix pleroma.instance gen
          --listen-ip 127.0.0.1
          --listen-port 9001
          --uploads-dir "uploads"
          --static-dir "instance/static"
          --db-configurable y
          --dbhost localhost
          --dbname akkoma
          --dbuser akkoma
          --dbpass "{{ db_pass }}"
          --domain "{{ instance_url }}"
          --instance-name "{{ instance_name }}"
          --admin-email "{{ admin_email }}"
          --notify-email "{{ notify_email }}"
          --indexable {{ indexable | ternary("y", "n") }}
          --strip-uploads {{ strip_uploads | ternary("y", "n") }}
          --anonymize-uploads {{ anonymize_uploads | ternary("y", "n") }}
          --dedupe-uploads {{ dedupe_uploads | ternary("y", "n") }}
          --rum {{ rum_indices | ternary("y", "n") }}
        chdir: /home/akkoma/akkoma
        creates: /home/akkoma/akkoma/config/generated_config.exs


- name: Update conf files
  gather_facts: false
  hosts: all
  become: true
  become_method: su
  become_user: akkoma
  vars_files:
    - vars/akkoma.yml
  vars:
    upload_filters:
      - Pleroma.Upload.Filter.AnonymizeFilename
      - Pleroma.Upload.Filter.Dedupe
  tasks:
    - name: Ingest autogenerated config file
      register: akkoma_config
      ansible.builtin.slurp:
        src: /home/akkoma/akkoma/config/generated_config.exs

    - name: Extract secret_key_base
      ansible.builtin.set_fact:
        secret_key_base: "{{ akkoma_config['content'] | b64decode | regex_search('(?<=secret_key_base: \").+(?=\")') }}"

    - name: Extract live view signing salt
      ansible.builtin.set_fact:
        live_view_salt: "{{ akkoma_config['content'] | b64decode | regex_search('(?<=signing_salt: \").+(?=\")') }}"

    - name: Extract signing salt
      ansible.builtin.set_fact:
        signing_salt: "{{ akkoma_config['content'] | b64decode | regex_search('(?<= signing_salt: \").+(?=\")') }}"

    - name: Extract web toast pubkey
      ansible.builtin.set_fact:
        toast_pubkey: "{{ akkoma_config['content'] | b64decode | regex_search('(?<=public_key: \").+(?=\")') }}"

    - name: Extract web toast privkey
      ansible.builtin.set_fact:
        toast_privkey: "{{ akkoma_config['content'] | b64decode | regex_search('(?<=private_key: \").+(?=\")') }}"

    - name: Extract Joken default signer
      ansible.builtin.set_fact:
        joken_default_signer: "{{ akkoma_config['content'] | b64decode | regex_search('(?<=default_signer: \").+(?=\")') }}"

    - name: Add optional filters
      loop:
        - Pleroma.Upload.Filter.Exiftool
      when: >-
        (item == "Pleroma.Upload.Filter.Exiftool" and strip_uploads)
      ansible.builtin.set_fact:
        upload_filters: "{{ upload_filters + [item] }}"

    - name: Write Akkoma config
      ansible.builtin.template:
        src: configs/akkoma/akkoma_conf.j2
        dest: /home/akkoma/akkoma/config/{{ mix_env }}.secret.exs
        mode: 0600

    - name: Write Akkoma service file
      become_user: root
      ansible.builtin.template:
        src: configs/akkoma/akkoma_rc.j2
        dest: /etc/rc.d/akkoma
        mode: 0755

    - name: Write Caddyfile
      become_user: root
      ansible.builtin.template:
        src: configs/akkoma/caddyfile.j2
        dest: /usr/local/etc/caddy/Caddyfile
        mode: 0644

    - name: Delete generated Akkoma config
      ansible.builtin.file:
        path: /home/akkoma/akkoma/config/generated_config.exs
        state: absent

    - name: Open HTTP ports on firewall
      become_user: root
      ansible.builtin.lineinfile:
        path: /etc/pf.conf
        line: "\n# Inbound HTTP traffic is OK\npass in quick inet proto tcp to any port {http, https}"


- name: Prepare database
  hosts: all
  become: true
  become_method: su
  vars_files:
    - vars/akkoma.yml
  tasks:
    - name: Initialize Postgres
      ansible.builtin.command:
        cmd: service postgresql oneinitdb

    - name: Start Postgres
      ansible.builtin.service:
        name: postgresql
        state: started

    - name: Create database
      ansible.builtin.command:
        cmd: psql -U postgres -f /home/akkoma/akkoma/config/setup_db.psql

    - name: Delete generated Postgres setup script
      ansible.builtin.file:
        path: /home/akkoma/akkoma/config/setup_db.psql
        state: absent

    - name: Prevent passwordless database login
      ansible.builtin.replace:
        path: /var/db/postgres/data13/pg_hba.conf
        regexp: "trust$"
        replace: "password"

    - name: Start Postgres
      ansible.builtin.service:
        name: postgresql
        state: restarted

    - name: Execute database migrations
      become_user: akkoma
      environment:
        MIX_ENV: "{{ mix_env }}"
      ansible.builtin.command:
        cmd: mix ecto.migrate
        chdir: /home/akkoma/akkoma

    - name: Execute RUM-specific database migrations
      when: rum_indices
      become_user: akkoma
      environment:
        MIX_ENV: "{{ mix_env }}"
      ansible.builtin.command:
        cmd: mix ecto.migrate --migrations-path priv/repo/optional_migrations/rum_indexing/
        chdir: /home/akkoma/akkoma

    - name: Migrate config to database
      become_user: akkoma
      environment:
        MIX_ENV: "{{ mix_env }}"
      ansible.builtin.command:
        cmd: mix pleroma.config migrate_to_db
        chdir: /home/akkoma/akkoma

    - name: Remove migrated configs from config file
      ansible.builtin.blockinfile:
        path: /home/akkoma/akkoma/config/{{ mix_env }}.secret.exs
        marker: "##### {mark} removing migrated configs #####"
        state: absent


- name: Enable services
  gather_facts: false
  hosts: all
  become: true
  become_method: su
  tasks:
    - name: Enable Postgres on boot
      community.general.sysrc:
        name: postgresql_enable
        value: "YES"

    - name: Enable Caddy on boot
      community.general.sysrc:
        name: caddy_enable
        value: "YES"

    - name: Enable Akkoma on boot
      community.general.sysrc:
        name: akkoma_enable
        value: "YES"
